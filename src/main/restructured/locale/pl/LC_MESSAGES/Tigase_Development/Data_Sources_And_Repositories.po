# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2022, Tigase, Inc
# This file is distributed under the same license as the TigaseDoc package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TigaseDoc \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-27 12:11-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:2
msgid "Data Source and Repositories"
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:4
msgid ""
"In Tigase XMPP Server 8.0.0 a new concept of data sources was introduced."
" It was introduced to create distinction between classes responsible for "
"maintaining connection to actual data source and classes operating on "
"this data source."
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:7
msgid "Data sources"
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:9
msgid "|Relations between DataSourceBean and DataSources|"
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:68
msgid "Relations between DataSourceBean and DataSources"
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:12
msgid "DataSource"
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:14
msgid ""
"``DataSource`` is an interface which should be implemented by all classes"
" implementing access to data source, i.e. implementing access to database"
" using JDBC connection or to MongoDB. Implementation of ``DataSource`` is"
" automatically selected using uri provided in configuration and "
"``@Repository.Meta`` annotation on classes implementing ``DataSource`` "
"interface."
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:17
msgid "DataSourcePool"
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:19
msgid ""
"``DataSourcePool`` is interface which should be implemented by classes "
"acting as a pool of data sources for single domain. There is no "
"requirement to create class implementing this interface, however if "
"implementation of ``DataSource`` is blocking and does not support "
"concurrent requests, then creation of ``DataSourcePool`` is recommended. "
"An example of such case is implementation of ``DataRepositoryImpl`` which"
" executes all requests using single connection and for this class there "
"is ``DataRepositoryPool`` implementing ``DataSourcePool`` interface and "
"improving performance. Implementation of ``DataSourcePool`` is "
"automatically selected using uri provided in configuration and "
"``@Repository.Meta`` annotation on classes implementing "
"``DataSourcePool`` interface."
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:22
msgid "DataSourceBean"
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:24
msgid ""
"This class is a helper class and provides support for handling multiple "
"data sources. You can think of a ``DataSourceBean`` as a map of named "
"``DataSource`` or ``DataSourcePool`` instances. This class is also "
"responsible for initialization of data source. Moreover, if data source "
"will change during runtime ``DataSourceBean`` is responsible for firing a"
" ``DataSourceChangedEvent`` to notify other classes about this change."
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:27
msgid "User and authentication repositories"
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:29
msgid ""
"This repositories may be using existing (configured and initialized) data"
" sources. However, it is also possible to that they may have their own "
"connections. Usage of data sources is recommended if possible."
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:31
msgid "|Relations between AuthRepositories and DataSources|"
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:69
msgid "Relations between AuthRepositories and DataSources"
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:33
msgid "|Relations between UserRepositories and DataSources|"
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:70
msgid "Relations between UserRepositories and DataSources"
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:36
msgid "AuthRepository and UserRepository"
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:38
msgid ""
"This are a base interfaces which needs to be implemented by "
"authentication repository (``AuthRepository``) and by repository of users"
" (``UserRepository``). Classes implementing this interfaces should be "
"only responsible for retrieving data from data sources."
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:41
msgid "AuthRepositoryPool and UserRepositoryPool"
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:43
msgid ""
"If class implementing ``AuthRepositoryPool`` or ``UserRepositoryPool`` is"
" not using data sources or contains blocking or is not good with "
"concurrent access, then it should be wrapped within proper repository "
"pool. Most of implementations provided as part of Tigase XMPP Server do "
"not require to be wrapped within repository pool. If your implementation "
"is blocking or not perform well with concurrent access (ie. due to "
"synchronization), then it should be wrapped within this pool. To wrap "
"implementation within a pool, you need to set ``pool-cls`` property of "
"configured user or authentication repository in your configuration file."
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:46
msgid "AuthRepositoryMDPoolBean and UserRepositoryMDPoolBean"
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:48
msgid ""
"This classes are for classes implementing ``AuthRepository`` and "
"``UserRepository`` what ``DataSourceBean`` is for classes implementing "
"``DataSource`` interface. This classes holds map of named authentication "
"or user repositories. They are also responsible for initialization of "
"classes implementing this repositories."
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:52
msgid "Other repositories"
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:54
msgid ""
"It is possible to implement repositories not implementing "
"``AuthRepository`` or ``UserRepository``. Each type of custom repository "
"should have its own API and its own interface."
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:56
msgid "|Relations between custom repositories and DataSources|"
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:71
msgid "Relations between custom repositories and DataSources"
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:59
msgid "DataSourceAware"
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:61
msgid ""
"Custom repositories should implement they own interface specifying its "
"API. This interfaces should extend ``DataSourceAware`` interface which is"
" base interface required to be implemented by custom repositories. "
"``DataSourceAware`` has a method ``setDataSource()`` which will be called"
" with instance of data source to initialize instance of custom "
"repository. Implementations should be annotated with ``@Repository.Meta``"
" implementation to make the automatically selected for proper type of "
"``DataSource`` implementation."
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:64
msgid "MDRepositoryBean"
msgstr ""

#: ../../Tigase_Development/Data_Sources_And_Repositories.rst:66
msgid ""
"It is required to create a class extending ``MDRepositoryBean`` "
"implementing same custom interface as the custom repository. This class "
"will be a multi domain pool, allowing you to have separate implementation"
" of custom repository for each domain. Moreover, it will be responsible "
"for creation and initialization of your custom repository instances."
msgstr ""

