# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2022, Tigase, Inc
# This file is distributed under the same license as the TigaseDoc package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TigaseDoc \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-13 12:04-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:2
msgid "Scripting Introduction - Hello World!"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:4
msgid ""
"This document is the first in a series describing scripting support in "
"the Tigase server showing how to load, install, update and call a script."
" It contains also an introduction to the scripting API with the first "
"*Hello world!* example."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:6
msgid ""
"Since Tigase version 4.3.1 the server supports scripting for "
"administrator commands as well as standard commands."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:8
msgid ""
"In theory many different languages can be used to write scripts and the "
"only requirement is that support `JSR-223 "
"<http://www.jcp.org/en/jsr/detail?id=223>`__ for the language is "
"installed. More details can be found on the `Java scripting project site "
"<https://docs.oracle.com/javase/8/docs/technotes/guides/scripting/prog_guide/api.html>`__."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:10
msgid ""
"In practice some languages are better supported than others, at the "
"moment we recommend `Groovy <http://groovy-lang.org/>`__. However the "
"following languages are also confirmed to be working: `Scala <http://www"
".scala-lang.org/>`__, `Python <http://www.python.org/>`__ and `Ruby "
"<http://www.ruby-lang.org/>`__. The `tigase-server GitHub "
"<https://github.com/tigase/tigase-server/blob/master/src/main>`__ "
"contains a few examples for these languages."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:14
msgid ""
"the default Tigase installation contains only libraries for Groovy. "
"Adding support for a different language is as simple as copying a few JAR"
" files to the Tigase ``libs/`` directory."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:16
msgid ""
"All the examples presented in this guide are also available as ready to "
"use scripts in the Tigase SVN repository in directory: "
"`src/main/groovy/tigase/admin <https://github.com/tigase/tigase-"
"server/blob/master/src/main/groovy/tigase/admin>`__."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:18
msgid ""
"The scripting utilizes only standard XMPP extensions and is by no means "
"specific to any particular solution. We use and prefer Psi client. The "
"whole guide and all the screen-shots are created using Psi client. You "
"can, however, use any other client which supports these extensions as "
"well. As the whole thing is based on the service discovery and ad-hoc "
"commands you need a XMPP client with a good support for both features."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:20
msgid ""
"To follow the guide and run all the examples you need will need to have "
"installed Tigase server version 4.3.1 or newer and you have to connect to"
" the server as administrator."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:23
msgid "Loading Script at Run Time"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:25
msgid ""
"All the scripting stuff is usually based on the service discovery and ad-"
"hoc commands in the Tigase server."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:27
msgid "|service disco|"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:184
msgid "service disco"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:29
msgid ""
"The first thing to do, therefore, is to browse service discovery on the "
"running server. The result you receive will depend on your installation "
"and installed components."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:31
msgid ""
"The most interesting things right now are all items with "
"\"http://jabber.org/protocol/admin\" in their node part. You may have a "
"few scripts loaded already but there are two commands used for scripting "
"management. Their names are descriptive enough: ``New command script`` "
"and ``Remove command script``."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:33
msgid ""
"The first is for adding a new script or updating existing and the second "
"is for removing script from the server."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:35
msgid ""
"To add a new script you have just to execute ``New command script``. In "
"Psi this is done by double clicking on the element in service discovery "
"list."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:37
msgid "|hello1 new script|"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:185
msgid "hello1 new script"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:39
msgid ""
"The screenshot above shows a couple of options to set for the loaded "
"script:"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:42
msgid "Description"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:42
msgid ""
"is what shows as the script name in the service discovery window. There "
"are no special restrictions on what to put there."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:45
msgid "Command id"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:45
msgid ""
"is a unique ID of the script (admin command). This is what shows after "
"the \"http://jabber.org/protocol/admin\" in node part. This needs to be "
"unique or existing script is overwritten."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:48
msgid "Language"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:48
msgid ""
"a drop down list of all supported scripting languages for your "
"installation. Tigase automatically detects all libraries for scripting "
"languages and lists them here. So all you need is to select the correct "
"language for your script."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:51
msgid "Script text"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:51
msgid "is just your script content."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:53
msgid ""
"When your script is ready and all fields are correctly set, simply press "
"\"**Finish**\" button and you should receive a message confirming that "
"the script has been loaded successfully."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:55
msgid "|loaded ok small|"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:186
msgid "loaded ok small"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:57
msgid ""
"In this guide we are creating a simple \"Hello world\" script written in "
"Groovy. What it does is displays a window (ad-hoc command result) with a "
"message: \"*Hello admin, how are you?*\"."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:59
msgid "It uses a basic scripting API which is described line by line below:"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:61
msgid "It imports basic Tigase classes."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:63
msgid ""
"Sets a local variable ``p`` which points to a ``packet`` variable with "
"data received from the client."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:65
msgid ""
"Creates a ``res`` variable which is response sent back to the client "
"(administrator). The response to the client is of type ``result``. Other "
"possible types will be introduced later."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:67
msgid ""
"We operate on ad-hoc commands here so the script uses Tigase utility "
"class to set/retrieve command parameters. It sets the window title and a "
"simple message displayed to the user (administrator)."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:69
msgid "The last line returns new packet as a script execution result."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:71
msgid "The first, very simple version looks like this:"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:83
msgid "Executing Script"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:85
msgid ""
"Once the script is successfully loaded you will have to reload/refresh "
"the service discovery window which now should display one more element on"
" the list."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:87
msgid "|service disco with new hello|"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:187
msgid "service disco with new hello"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:89
msgid ""
"As you can see script name is set to what you have entered as "
"\"Description\" in script loading window - \"*Hello world script*\". The "
"command node is set to: \"http://jabber.org/protocol/admin#hello\" if "
"\"**hello**\" is what is set as the script ID."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:91
msgid ""
"To execute the script you just have to double click on the script name "
"(or click execute command if you use any other client)."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:93
msgid ""
"As a result you should see a simple window similar to the screenshot "
"below displaying our message."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:95
msgid "|hello1 result small|"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:188
msgid "hello1 result small"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:98
msgid "Interaction in Scripts"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:100
msgid ""
"Displaying just a message is very nice but is not very useful in most "
"cases. Normally you need to ask the user for some more data or parameters"
" before you can perform any real processing."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:102
msgid ""
"Therefore in most cases the administrator script has to display a new "
"window with input fields asking the user for some more data. In this "
"document we present very simple examples, just an introduction so let’s "
"ask about the administrator name before displaying a greeting."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:104
msgid "|hello2 asking for name small|"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:189
msgid "hello2 asking for name small"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:106
msgid ""
"To ask the user for some more information we have to extend example above"
" with some more code:"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:131
msgid ""
"If you compare both scripts you see that they are quite similar. Before "
"displaying greeting, however, the script tries to retrieve data from the "
"``name`` input field. If the name had been provided the greeting is "
"displayed, otherwise the script asks for the user name."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:133
msgid "|hello2 result small|"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:190
msgid "hello2 result small"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:135
msgid ""
"Please note, in this case the packet sent back to the user is of type "
"form instead of ``result``. The practical difference is that the type "
"``result`` displays only **OK** button which when pressed doesn’t send "
"any data to the server. The form packet displays more buttons - "
"**Finish** and **Cancel**. Whichever you press some data is sent back to "
"the server."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:137
msgid ""
"This script demonstrates use of two new methods from the utility class "
"\"Command\": getFieldValue and addFieldValue."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:139
msgid ""
"The first argument to all Command methods is the packet with ad-hoc "
"command."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:141
msgid "The second argument is usually the input field name"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:143
msgid ""
"These two method parameters are actually enough to read the ad-hoc "
"command data. Methods creating input fields in the ad-hoc command need a "
"few arguments more:"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:145
msgid ""
"Next arguments sets a default value displayed to the user. The way to it "
"is set in the example above is specific to Groovy language and is quite "
"useful what will be apparent in later examples."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:147
msgid ""
"After that we have to specify the field type. All field types are defined"
" in the `XEP-0004 <http://xmpp.org/extensions/xep-0004.html#protocol-"
"fieldtypes>`__ article."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:149
msgid ""
"The last argument specifies the field label which is displayed to the "
"user."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:151
msgid "|hello2 new script|"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:191
msgid "hello2 new script"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:153
msgid ""
"There are a few other different utility methods in the Command class to "
"set different types of input fields and they will be described in details"
" later on."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:155
msgid ""
"To reload the script simply call \"New command script\" again, enter the "
"script text and make sure you entered exactly the same command ID to "
"replace the old script with the new one."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:157
msgid ""
"Or of course, you can enter a new command id to create a new command and "
"make it available on your server."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:159
msgid ""
"When the script is loaded on the server, try to execute it. You should "
"get a new dialog window asking for your name as in the screenshot at the "
"beginning of this section. When you have entered your name and clicked "
"the \"Finish\" button you will see another window with a greeting message"
" along with your name."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:162
msgid "Automatic Scripts Loading at Startup Time"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:164
msgid ""
"The last thing described in this guide is how to automatically load your "
"scripts when the Tigase server starts. The ability to load scripts at run"
" time, update and remove remove them is very useful, especially in "
"emergency cases if something wrong is going on and you want to act "
"without affecting the service."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:166
msgid ""
"If you, however have a few dozens scripts you don’t want to manually load"
" them every time the server restarts."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:168
msgid ""
"Tigase server automatically loads all scripts at the startup time which "
"are located in the admin scripts directory. Unless you set it differently"
" in the configuration it is: "
"**YourTigaseInstallationDir/scripts/admin/**. All you have to do is to "
"copy all your scripts to this directory and they will be loaded next time"
" the server starts."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:170
msgid ""
"But hold on. What about the script parameters: language, description, "
"command id? How are you supposed to set them?"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:172
msgid ""
"Language is simple. It is detected automatically by the script file "
"extension. So just make sure file extensions are correct and the language"
" is sorted."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:174
msgid ""
"The script description and command id needs a little bit more work. You "
"have to include in your script following lines:"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Scripting/Introduction.rst:182
msgid ""
"Please note, there must be at least a single space after the "
"``AS:Description:`` or ``AS:CommandId:`` string. Everything rest after "
"that, until the end of the line, is treated as either the script "
"description or command id. Put these in your script file and the loader "
"will detect them and set correctly for your script."
msgstr ""

