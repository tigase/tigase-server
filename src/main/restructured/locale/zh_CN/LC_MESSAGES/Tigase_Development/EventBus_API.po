# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2022, Tigase, Inc
# This file is distributed under the same license as the TigaseDoc package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
msgid ""
msgstr ""
"Project-Id-Version:  TigaseDoc\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-08-03 03:02-0700\n"
"PO-Revision-Date: 2022-07-25 22:40+0000\n"
"Last-Translator: Qian Luo <qian.luo@tigase.net>\n"
"Language: zh_CN\n"
"Language-Team: Chinese (Simplified) <http://translate.tigase.net/projects"
"/tigase-xmpp-server/dg-eventbus_api/zh_Hans/>\n"
"Plural-Forms: nplurals=1; plural=0\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../Tigase_Development/EventBus_API.rst:3
msgid "EventBus API in Tigase"
msgstr "Tigase中的EventBus API"

#: ../../Tigase_Development/EventBus_API.rst:5
msgid ""
"EventBus is a custom publish-subscribe mechanism which allows for the use"
" of Event Listener within Tigase Server. For a more detailed overview of "
"EventBus and it’s features, please visit `The Administration Guide "
"<http://docs.tigase.org/tigase-"
"server/snapshot/Administration_Guide/html/#eventBus>`__."
msgstr ""
"EventBus是一种自定义发布-订阅机制，它允许在Tigase服务器中使用事件监听器。有关EventBus及其功能的更详细概述，请访问 "
"`管理指南 <http://docs.tigase.org/tigase-"
"server/snapshot/Administration_Guide/html/#eventBus>`__。"

#: ../../Tigase_Development/EventBus_API.rst:8
#, fuzzy
msgid "EventBus API"
msgstr "EventBus API"

#: ../../Tigase_Development/EventBus_API.rst:10
msgid "To create instance of EventBus use the following code:"
msgstr "要创建EventBus的实例，请使用以下代码："

#: ../../Tigase_Development/EventBus_API.rst:18
msgid ""
"Remember, that EventBus is asynchronous. All handlers are called in a "
"different thread than the thread that initially fired the event."
msgstr "请记住，EventBus是异步的。所有处理程序都在与最初触发事件的线程不同的线程中调用。"

#: ../../Tigase_Development/EventBus_API.rst:21
msgid "Events"
msgstr "事件"

#: ../../Tigase_Development/EventBus_API.rst:23
msgid ""
"Events may be defined in two ways: as a class |ss| or as an XML "
"element(XML/Element based events are deprecated since version 8.2 and "
"will be removed in version 9.0)\\. |se|\\"
msgstr ""
"事件可以用两种方式定义：作为一个类 |ss| 或作为XML元素（自8.2版起已弃用基于XML/元素的事件，并将在9.0 版中删除）\\. "
"|se|\\"

#: ../../Tigase_Development/EventBus_API.rst:25
msgid "**Serialized event class.**"
msgstr "**序列化事件类。**"

#: ../../Tigase_Development/EventBus_API.rst:39
msgid "**Event class.**"
msgstr "**事件类。**"

#: ../../Tigase_Development/EventBus_API.rst:53
msgid "|ss| **XML Element event(deprecated)**\\ |se|\\"
msgstr "|ss| **XML元素事件（已弃用）**\\ |se|\\"

#: ../../Tigase_Development/EventBus_API.rst:63
msgid ""
"Events defined as XML element and class implementing ``Serializable`` "
"interface will be distributed to all servers in cluster. Event "
"``SampleEvent`` will be broadcast only in the same instance what fired "
"the event."
msgstr ""
"定义为XML元素和实现 ``Serializable`` 接口的类的事件将分发到集群中的所有服务器。事件 ``SampleEvent`` "
"将仅在触发事件的同一实例中广播。"

#: ../../Tigase_Development/EventBus_API.rst:66
msgid "Requirements for class-based events"
msgstr "基于类的事件的要求"

#: ../../Tigase_Development/EventBus_API.rst:68
msgid "Default, explicit, public, paremeter-less constructor is mandatory."
msgstr "默认的、显式的、公共的、无参数的构造函数是强制性的。"

#: ../../Tigase_Development/EventBus_API.rst:70
msgid ""
"If the event should be delivered to all cluster nodes then it **MUST** "
"implement ``Serializable`` interface."
msgstr "如果事件应该被传递到所有集群节点，那么它 **必须** 实现 ``Serializable`` 接口。"

#: ../../Tigase_Development/EventBus_API.rst:72
msgid ""
"Variables serialisation follows ``Serializable`` semantics, which means "
"that ``final``, ``static`` nor ``transient`` fields will be skipped. "
"What’s more, fields with ``null`` value will not be serialised neither."
msgstr ""
"变量序列化遵循 ``Serializable`` 语义，这意味着 ``final``、``static`` 和 ``transient`` "
"字段将被跳过。更重要的是，具有 ``null`` 值的字段也不会被序列化。"

#: ../../Tigase_Development/EventBus_API.rst:75
msgid "Serialisation of class-based events"
msgstr "基于类的事件的序列化"

#: ../../Tigase_Development/EventBus_API.rst:77
msgid ""
"Class based events are serialized (if it is required and possible) to XML"
" element. Name of XML element is taken from full name of class:"
msgstr "基于类的事件被序列化（如果需要并且可能的话）到XML元素。 XML元素的名称取自类的全名："

#: ../../Tigase_Development/EventBus_API.rst:79
msgid "**Class based event serialized to XML.**"
msgstr "**基于类的事件序列化为XML。**"

#: ../../Tigase_Development/EventBus_API.rst:88
msgid "Firing events"
msgstr "触发事件"

#: ../../Tigase_Development/EventBus_API.rst:90
msgid "To fire event, just get instance of EventBus and call method ``fire()``."
msgstr "要触发事件，只需获取EventBus的实例并调用方法 ``fire()``。"

#: ../../Tigase_Development/EventBus_API.rst:92
msgid "**Firing serialized event.**"
msgstr "**触发序列化事件。**"

#: ../../Tigase_Development/EventBus_API.rst:100
msgid "**Firing simple event.**"
msgstr "**触发简单事件。**"

#: ../../Tigase_Development/EventBus_API.rst:108
msgid "|ss| **Firing event based on XML Element(deprecated)** |se|\\"
msgstr "|ss| **基于XML元素的触发事件（已弃用）** |se|\\"

#: ../../Tigase_Development/EventBus_API.rst:117
msgid "Handling events"
msgstr "处理事件"

#: ../../Tigase_Development/EventBus_API.rst:119
msgid ""
"To handle fired event, we have to register listener in EventBus. When "
"listener is registered, EventBus automatically subscribes for this type "
"of event in all instances in cluster."
msgstr "要处理触发的事件，我们必须在EventBus中注册监听器。注册监听器后，EventBus会自动在集群中的所有实例中订阅此类事件。"

#: ../../Tigase_Development/EventBus_API.rst:121
msgid ""
"Depends on expected event type, we have to decide what type of listener "
"we should register."
msgstr "取决于预期的事件类型，我们必须决定我们应该注册哪种类型的监听器。"

#: ../../Tigase_Development/EventBus_API.rst:124
msgid "Handling class based events"
msgstr "处理基于类的事件"

#: ../../Tigase_Development/EventBus_API.rst:126
msgid ""
"This option is reserved for class based events only. It doesn’t matter if"
" it is serialized class or not."
msgstr "此选项仅用于基于类的事件。是否是序列化类都没有关系。"

#: ../../Tigase_Development/EventBus_API.rst:137
msgid ""
"To make registering listeners more easy, you can use method "
"``registerAll()`` from EventBus. This method registers all methods given "
"class, annotated by ``@HandleEvent`` as listeners for event declared as "
"the method argument."
msgstr ""
"为了使注册监听器更容易，您可以使用EventBus中的方法 ``registerAll()``。此方法注册给定类的所有方法，由 "
"``@HandleEvent`` 注释为声明为方法参数的事件的侦听器。"

#: ../../Tigase_Development/EventBus_API.rst:154
msgid "|ss| Handling XML events |se|\\"
msgstr "|ss| 处理XML事件 |se|\\"

#: ../../Tigase_Development/EventBus_API.rst:156
#, fuzzy
msgid ""
"To handle XML events we have to register listener for specific event "
"package and name. In our example, package is empty because event name has"
" no package declared (see also :ref:`Filtering events<filteringEvents>`)."
msgstr ""
"要处理XML事件，我们必须为特定事件包和名称注册侦听器。在我们的示例中，包是空的，因为事件名称没有声明包（另请参阅 "
":ref:`过滤事件<filtering_events>`）。"

#: ../../Tigase_Development/EventBus_API.rst:173
msgid ""
"Because serialized class events, ale transformed to XML elements, we are "
"able to listen for XML representation of class based event. To do that, "
"we have to register listener for specific package and class name:"
msgstr "因为序列化的类事件，ale转换为XML元素，所以我们能够侦听基于类的事件的XML表示。为此，我们必须为特定的包和类名注册监听器："

#: ../../Tigase_Development/EventBus_API.rst:186
msgid "**Important**"
msgstr "**重要**"

#: ../../Tigase_Development/EventBus_API.rst:188
msgid ""
"XML events created on others cluster node, will have attribute ``remote``"
" set to ``true`` and attribute ``source`` set to event creator node name:"
msgstr "在其他集群节点上创建的XML事件，将属性 ``remote`` 设置为 ``true``，属性 ``source`` 设置为事件创建者节点名称："

#: ../../Tigase_Development/EventBus_API.rst:199
msgid "Filtering events"
msgstr "过滤事件"

#: ../../Tigase_Development/EventBus_API.rst:201
msgid ""
"Sometimes you may want to receive many kinds of events with the same "
"handler. EventBus has very simple mechanism to generalization:"
msgstr "有时您可能希望使用同一个处理程序接收多种事件。 EventBus有非常简单的泛化机制："

#: ../../Tigase_Development/EventBus_API.rst:208
msgid ""
"This listener will be called for each event with given package name (XML "
"based, or serialized class based)."
msgstr "将为具有给定包名称（基于XML或基于序列化类）的每个事件调用此侦听器。"

#: ../../Tigase_Development/EventBus_API.rst:210
msgid ""
"This listener will be called for ALL events (XML based, or serialized "
"class based)."
msgstr "将为所有事件（基于XML或基于序列化类）调用此侦听器。"

#: ../../Tigase_Development/EventBus_API.rst:212
msgid "In case of class based events, EventBus is checking class inheritance."
msgstr "对于基于类的事件，EventBus正在检查类继承。"

#: ../../Tigase_Development/EventBus_API.rst:224
msgid "Will be called, because this is listener stricte for ``SpecificEvent``."
msgstr "将被调用，因为这是 ``SpecificEvent`` 的严格监听器。"

#: ../../Tigase_Development/EventBus_API.rst:226
msgid "Will be called, because ``SpecificEvent`` extends ``MainEvent``."
msgstr "将被调用，因为 ``SpecificEvent`` 扩展了 ``MainEvent``。"

