# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2022, Tigase, Inc
# This file is distributed under the same license as the TigaseDoc package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TigaseDoc \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-27 12:30-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../Tigase_Development/EventBus_API.rst:3
msgid "EventBus API in Tigase"
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:5
msgid ""
"EventBus is a custom publish-subscribe mechanism which allows for the use"
" of Event Listener within Tigase Server. For a more detailed overview of "
"EventBus and it’s features, please visit `The Administration Guide "
"<http://docs.tigase.org/tigase-"
"server/snapshot/Administration_Guide/html/#eventBus>`__."
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:8
msgid "EventBus API"
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:10
msgid "To create instance of EventBus use the following code:"
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:18
msgid ""
"Remember, that EventBus is asynchronous. All handlers are called in a "
"different thread than the thread that initially fired the event."
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:21
msgid "Events"
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:23
msgid ""
"Events may be defined in two ways: as a class |ss| or as an XML "
"element(XML/Element based events are deprecated since version 8.2 and "
"will be removed in version 9.0)\\. |se|\\"
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:25
msgid "**Serialized event class.**"
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:39
msgid "**Event class.**"
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:53
msgid "|ss| **XML Element event(deprecated)**\\ |se|\\"
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:63
msgid ""
"Events defined as XML element and class implementing ``Serializable`` "
"interface will be distributed to all servers in cluster. Event "
"``SampleEvent`` will be broadcast only in the same instance what fired "
"the event."
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:66
msgid "Requirements for class-based events"
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:68
msgid "Default, explicit, public, paremeter-less constructor is mandatory."
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:70
msgid ""
"If the event should be delivered to all cluster nodes then it **MUST** "
"implement ``Serializable`` interface."
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:72
msgid ""
"Variables serialisation follows ``Serializable`` semantics, which means "
"that ``final``, ``static`` nor ``transient`` fields will be skipped. "
"What’s more, fields with ``null`` value will not be serialised neither."
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:75
msgid "Serialisation of class-based events"
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:77
msgid ""
"Class based events are serialized (if it is required and possible) to XML"
" element. Name of XML element is taken from full name of class:"
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:79
msgid "**Class based event serialized to XML.**"
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:88
msgid "Firing events"
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:90
msgid "To fire event, just get instance of EventBus and call method ``fire()``."
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:92
msgid "**Firing serialized event.**"
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:100
msgid "**Firing simple event.**"
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:108
msgid "|ss| **Firing event based on XML Element(deprecated)** |se|\\"
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:117
msgid "Handling events"
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:119
msgid ""
"To handle fired event, we have to register listener in EventBus. When "
"listener is registered, EventBus automatically subscribes for this type "
"of event in all instances in cluster."
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:121
msgid ""
"Depends on expected event type, we have to decide what type of listener "
"we should register."
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:124
msgid "Handling class based events"
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:126
msgid ""
"This option is reserved for class based events only. It doesn’t matter if"
" it is serialized class or not."
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:137
msgid ""
"To make registering listeners more easy, you can use method "
"``registerAll()`` from EventBus. This method registers all methods given "
"class, annotated by ``@HandleEvent`` as listeners for event declared as "
"the method argument."
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:154
msgid "|ss| Handling XML events |se|\\"
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:156
msgid ""
"To handle XML events we have to register listener for specific event "
"package and name. In our example, package is empty because event name has"
" no package declared (see also `Filtering events "
"<#_filtering_events>`__)."
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:173
msgid ""
"Because serialized class events, ale transformed to XML elements, we are "
"able to listen for XML representation of class based event. To do that, "
"we have to register listener for specific package and class name:"
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:186
msgid "**Important**"
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:188
msgid ""
"XML events created on others cluster node, will have attribute ``remote``"
" set to ``true`` and attribute ``source`` set to event creator node name:"
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:198
msgid "Filtering events"
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:200
msgid ""
"Sometimes you may want to receive many kinds of events with the same "
"handler. EventBus has very simple mechanism to generalization:"
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:207
msgid ""
"This listener will be called for each event with given package name (XML "
"based, or serialized class based)."
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:209
msgid ""
"This listener will be called for ALL events (XML based, or serialized "
"class based)."
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:211
msgid "In case of class based events, EventBus is checking class inheritance."
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:223
msgid "Will be called, because this is listener stricte for ``SpecificEvent``."
msgstr ""

#: ../../Tigase_Development/EventBus_API.rst:225
msgid "Will be called, because ``SpecificEvent`` extends ``MainEvent``."
msgstr ""

