# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2022, Tigase, Inc
# This file is distributed under the same license as the TigaseDoc package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TigaseDoc \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-27 12:30-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.8.0\n"

#: ../../Tigase_Development/Tests.rst:2 ../../Tigase_Development/Tests.rst:5
msgid "Tests"
msgstr ""

#: ../../Tigase_Development/Tests.rst:7
msgid "Tests are very important part of Tigase server development process."
msgstr ""

#: ../../Tigase_Development/Tests.rst:9
msgid ""
"Each release goes through fully automated testing process. All server "
"functions are considered implemented only when they pass the testing "
"cycle. Tigase test suite is used for all our automatic tests which allows"
" to define different test scenarios."
msgstr ""

#: ../../Tigase_Development/Tests.rst:11
msgid ""
"There is no tweaking on databases for tests. All databases are installed "
"in a standard way and run with default settings. Databases are cleared "
"each time before the test cycle starts."
msgstr ""

#: ../../Tigase_Development/Tests.rst:13
msgid ""
"There are no modifications needed to be made to Tigaseâ€™s configuration "
"file as well. All tests are performed on a default configuration "
"generated by the configuration wizards."
msgstr ""

#: ../../Tigase_Development/Tests.rst:15
msgid "The server is tested in all supported environments:"
msgstr ""

#: ../../Tigase_Development/Tests.rst:17
msgid ""
"**XMLDB** - tests with built-in simple XML database. This is a simple and"
" efficient solution for small installations. It is recommended for "
"services with up to 100 user accounts although it has been successfully "
"tested with 10,000 user accounts."
msgstr ""

#: ../../Tigase_Development/Tests.rst:19
msgid ""
"**MySQL** - tests with a `MySQL <http://www.mysql.com/>`__ database. Much"
" slower than XMLDB but may handle many more user accounts."
msgstr ""

#: ../../Tigase_Development/Tests.rst:21
msgid ""
"**PostgreSQL** - tests with a `PostgreSQL <http://www.postgresql.org/>`__"
" database. Again it is much slower than XMLDB but may handle much more "
"user accounts. This is basically exactly the same code as for MySQL "
"database (SQL Connector) but tests are executed to make sure the code is "
"compatible with all supported SQL databases and to compare performance."
msgstr ""

#: ../../Tigase_Development/Tests.rst:23
msgid ""
"**Distributed** - is a test for distributed installation where c2s and "
"s2s components run on separated machine which connects using external an "
"component protocol (`XEP-0114 "
"<http://www.xmpp.org/extensions/xep-0114.html>`__) to another machine "
"with SessionManager running."
msgstr ""

#: ../../Tigase_Development/Tests.rst:27
msgid "Functional Tests"
msgstr ""

#: ../../Tigase_Development/Tests.rst:29
msgid ""
"Basic checking to see if all the functions work at correctly. These tests"
" are performed every time the code is sent to source repository."
msgstr ""

#: ../../Tigase_Development/Tests.rst:32 ../../Tigase_Development/Tests.rst:73
#: ../../Tigase_Development/Tests.rst:114
msgid "Version"
msgstr ""

#: ../../Tigase_Development/Tests.rst:32 ../../Tigase_Development/Tests.rst:73
#: ../../Tigase_Development/Tests.rst:114
msgid "XMLDB"
msgstr ""

#: ../../Tigase_Development/Tests.rst:32 ../../Tigase_Development/Tests.rst:73
#: ../../Tigase_Development/Tests.rst:114
msgid "MySQL"
msgstr ""

#: ../../Tigase_Development/Tests.rst:32 ../../Tigase_Development/Tests.rst:73
#: ../../Tigase_Development/Tests.rst:114
msgid "PGSQL"
msgstr ""

#: ../../Tigase_Development/Tests.rst:32 ../../Tigase_Development/Tests.rst:73
#: ../../Tigase_Development/Tests.rst:114
msgid "Distributed"
msgstr ""

#: ../../Tigase_Development/Tests.rst:34 ../../Tigase_Development/Tests.rst:75
msgid "3.3.2-b889"
msgstr ""

#: ../../Tigase_Development/Tests.rst:34
msgid "`00:00:12 <tests/3.3.2-b889/func/xmldb/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:34
msgid "`00:00:17 <tests/3.3.2-b889/func/mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:34
msgid "`00:00:17 <tests/3.3.2-b889/func/pgsql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:34 ../../Tigase_Development/Tests.rst:75
msgid "none"
msgstr ""

#: ../../Tigase_Development/Tests.rst:36 ../../Tigase_Development/Tests.rst:77
msgid "3.3.2-b880"
msgstr ""

#: ../../Tigase_Development/Tests.rst:36
msgid "`00:00:13 <tests/3.3.2-b880/func/xmldb/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:36
msgid "`00:00:15 <tests/3.3.2-b880/func/mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:36
msgid "`00:00:15 <tests/3.3.2-b880/func/pgsql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:36 ../../Tigase_Development/Tests.rst:64
#: ../../Tigase_Development/Tests.rst:77 ../../Tigase_Development/Tests.rst:105
#: ../../Tigase_Development/Tests.rst:116
msgid "None"
msgstr ""

#: ../../Tigase_Development/Tests.rst:38 ../../Tigase_Development/Tests.rst:79
msgid "3.0.2-b700"
msgstr ""

#: ../../Tigase_Development/Tests.rst:38
msgid "`00:00:22 <tests/3.0.2-b700/func/xmldb/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:38
msgid "`00:00:24 <tests/3.0.2-b700/func/mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:38
msgid "`00:00:25 <tests/3.0.2-b700/func/pgsql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:38
msgid "`00:00:25 <tests/3.0.2-b700/func/sm-mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:40 ../../Tigase_Development/Tests.rst:81
msgid "2.9.5-b606"
msgstr ""

#: ../../Tigase_Development/Tests.rst:40
msgid "`00:00:22 <tests/2.9.5-b606/func/xmldb/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:40
msgid "`00:00:24 <tests/2.9.5-b606/func/mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:40
msgid "`00:00:24 <tests/2.9.5-b606/func/pgsql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:40
msgid "`00:00:24 <tests/2.9.5-b606/func/sm-mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:42 ../../Tigase_Development/Tests.rst:83
msgid "2.9.3-b548"
msgstr ""

#: ../../Tigase_Development/Tests.rst:42
msgid "`00:00:22 <tests/2.9.3-b548/func/xmldb/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:42
msgid "`00:00:23 <tests/2.9.3-b548/func/mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:42
msgid "`00:00:25 <tests/2.9.3-b548/func/pgsql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:42
msgid "`00:00:25 <tests/2.9.3-b548/func/sm-mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:44 ../../Tigase_Development/Tests.rst:85
msgid "2.9.1-b528"
msgstr ""

#: ../../Tigase_Development/Tests.rst:44
msgid "`00:00:21 <tests/2.9.1-b528/func/xmldb/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:44
msgid "`00:00:23 <tests/2.9.1-b528/func/mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:44
msgid "`00:00:24 <tests/2.9.1-b528/func/pgsql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:44
msgid "`00:00:25 <tests/2.9.1-b528/func/sm-mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:46 ../../Tigase_Development/Tests.rst:87
msgid "2.8.6-b434"
msgstr ""

#: ../../Tigase_Development/Tests.rst:46
msgid "`00:00:21 <tests/2.8.6-b434/func/xmldb/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:46
msgid "`00:00:24 <tests/2.8.6-b434/func/mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:46
msgid "`00:00:24 <tests/2.8.6-b434/func/pgsql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:46
msgid "`00:00:25 <tests/2.8.6-b434/func/sm-mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:48 ../../Tigase_Development/Tests.rst:89
msgid "2.8.5-b422"
msgstr ""

#: ../../Tigase_Development/Tests.rst:48
msgid "`00:00:21 <tests/2.8.5-b422/func/xmldb/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:48
msgid "`00:00:24 <tests/2.8.5-b422/func/mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:48
msgid "`00:00:24 <tests/2.8.5-b422/func/pgsql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:48
msgid "`00:00:26 <tests/2.8.5-b422/func/sm-mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:50 ../../Tigase_Development/Tests.rst:91
msgid "2.8.3-b409"
msgstr ""

#: ../../Tigase_Development/Tests.rst:50
msgid "`00:00:27 <tests/2.8.3-b409/func/xmldb/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:50
msgid "`00:00:29 <tests/2.8.3-b409/func/mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:50
msgid "`00:00:29 <tests/2.8.3-b409/func/pgsql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:50
msgid "`00:00:32 <tests/2.8.3-b409/func/sm-mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:52 ../../Tigase_Development/Tests.rst:93
msgid "2.7.2-b378"
msgstr ""

#: ../../Tigase_Development/Tests.rst:52
msgid "`00:00:30 <tests/2.7.2-b378/func/xmldb/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:52
msgid "`00:00:34 <tests/2.7.2-b378/func/mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:52
msgid "`00:00:33 <tests/2.7.2-b378/func/pgsql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:52
msgid "`00:00:35 <tests/2.7.2-b378/func/sm-mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:54 ../../Tigase_Development/Tests.rst:95
msgid "2.6.4-b300"
msgstr ""

#: ../../Tigase_Development/Tests.rst:54
msgid "`00:00:30 <tests/2.6.4-b300/func/xmldb/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:54
msgid "`00:00:32 <tests/2.6.4-b300/func/mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:54
msgid "`00:00:35 <tests/2.6.4-b300/func/pgsql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:54
msgid "`00:00:39 <tests/2.6.4-b300/func/sm-mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:56 ../../Tigase_Development/Tests.rst:97
msgid "2.6.4-b295"
msgstr ""

#: ../../Tigase_Development/Tests.rst:56
msgid "`00:00:29 <tests/2.6.4-b295/func/xmldb/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:56
msgid "`00:00:32 <tests/2.6.4-b295/func/mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:56
msgid "`00:00:45 <tests/2.6.4-b295/func/pgsql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:56
msgid "`00:00:36 <tests/2.6.4-b295/func/sm-mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:58 ../../Tigase_Development/Tests.rst:99
msgid "2.6.0-b287"
msgstr ""

#: ../../Tigase_Development/Tests.rst:58
msgid "`00:00:31 <tests/2.6.0-b287/func/xmldb/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:58
msgid "`00:00:34 <tests/2.6.0-b287/func/mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:58
msgid "`00:00:47 <tests/2.6.0-b287/func/pgsql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:58
msgid "`00:00:43 <tests/2.6.0-b287/func/sm-mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:60 ../../Tigase_Development/Tests.rst:101
msgid "2.5.0-b279"
msgstr ""

#: ../../Tigase_Development/Tests.rst:60
msgid "`00:00:30 <tests/2.5.0-b279/func/xmldb/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:60
msgid "`00:00:34 <tests/2.5.0-b279/func/mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:60
msgid "`00:00:45 <tests/2.5.0-b279/func/pgsql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:60
msgid "`00:00:43 <tests/2.5.0-b279/func/sm-mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:62 ../../Tigase_Development/Tests.rst:103
msgid "2.4.0-b263"
msgstr ""

#: ../../Tigase_Development/Tests.rst:62
msgid "`00:00:29 <tests/2.4.0-b263/func/xmldb/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:62
msgid "`00:00:33 <tests/2.4.0-b263/func/mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:62
msgid "`00:00:45 <tests/2.4.0-b263/func/pgsql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:62
msgid "`00:00:44 <tests/2.4.0-b263/func/sm-mysql/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:64 ../../Tigase_Development/Tests.rst:105
#: ../../Tigase_Development/Tests.rst:116
msgid "2.3.4-b226"
msgstr ""

#: ../../Tigase_Development/Tests.rst:64
msgid "`00:00:48 <tests/functional-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:68
msgid "Performance Tests"
msgstr ""

#: ../../Tigase_Development/Tests.rst:70
msgid "Checking to see whether the function performs well enough."
msgstr ""

#: ../../Tigase_Development/Tests.rst:75
msgid "`00:12:17 <tests/3.3.2-b889/perf/xmldb/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:75
msgid "`00:13:42 <tests/3.3.2-b889/perf/mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:75
msgid "`00:17:10 <tests/3.3.2-b889/perf/pgsql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:77
msgid "`00:13:39 <tests/3.3.2-b880/perf/xmldb/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:77
msgid "`00:14:09 <tests/3.3.2-b880/perf/mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:77
msgid "`00:17:39 <tests/3.3.2-b880/perf/pgsql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:79
msgid "`00:10:26 <tests/3.0.2-b700/perf/xmldb/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:79
msgid "`00:11:00 <tests/3.0.2-b700/perf/mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:79
msgid "`00:12:08 <tests/3.0.2-b700/perf/pgsql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:79
msgid "`00:24:05 <tests/3.0.2-b700/perf/sm-mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:81
msgid "`00:09:54 <tests/2.9.5-b606/perf/xmldb/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:81
msgid "`00:11:18 <tests/2.9.5-b606/perf/mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:81
msgid "`00:37:08 <tests/2.9.5-b606/perf/pgsql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:81
msgid "`00:16:20 <tests/2.9.5-b606/perf/sm-mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:83
msgid "`00:10:00 <tests/2.9.3-b548/perf/xmldb/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:83
msgid "`00:11:29 <tests/2.9.3-b548/perf/mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:83
msgid "`00:36:43 <tests/2.9.3-b548/perf/pgsql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:83
msgid "`00:16:47 <tests/2.9.3-b548/perf/sm-mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:85
msgid "`00:09:46 <tests/2.9.1-b528/perf/xmldb/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:85
msgid "`00:11:15 <tests/2.9.1-b528/perf/mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:85
msgid "`00:36:12 <tests/2.9.1-b528/perf/pgsql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:85
msgid "`00:16:36 <tests/2.9.1-b528/perf/sm-mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:87
msgid "`00:10:02 <tests/2.8.6-b434/perf/xmldb/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:87
msgid "`00:11:45 <tests/2.8.6-b434/perf/mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:87
msgid "`00:36:36 <tests/2.8.6-b434/perf/pgsql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:87
msgid "`00:17:36 <tests/2.8.6-b434/perf/sm-mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:89
msgid "`00:12:37 <tests/2.8.5-b422/perf/xmldb/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:89
msgid "`00:14:40 <tests/2.8.5-b422/perf/mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:89
msgid "`00:38:59 <tests/2.8.5-b422/perf/pgsql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:89
msgid "`00:21:40 <tests/2.8.5-b422/perf/sm-mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:91
msgid "`00:12:32 <tests/2.8.3-b409/perf/xmldb/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:91
msgid "`00:14:26 <tests/2.8.3-b409/perf/mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:91
msgid "`00:37:57 <tests/2.8.3-b409/perf/pgsql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:91
msgid "`00:21:26 <tests/2.8.3-b409/perf/sm-mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:93
msgid "`00:12:28 <tests/2.7.2-b378/perf/xmldb/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:93
msgid "`00:14:57 <tests/2.7.2-b378/perf/mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:93
msgid "`00:37:09 <tests/2.7.2-b378/perf/pgsql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:93
msgid "`00:22:20 <tests/2.7.2-b378/perf/sm-mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:95
msgid "`00:12:46 <tests/2.6.4-b300/perf/xmldb/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:95
msgid "`00:14:59 <tests/2.6.4-b300/perf/mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:95
msgid "`00:36:56 <tests/2.6.4-b300/perf/pgsql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:95
msgid "`00:35:00 <tests/2.6.4-b300/perf/sm-mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:97
msgid "`00:12:23 <tests/2.6.4-b295/perf/xmldb/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:97
msgid "`00:14:59 <tests/2.6.4-b295/perf/mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:97
msgid "`00:42:24 <tests/2.6.4-b295/perf/pgsql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:97
msgid "`00:30:18 <tests/2.6.4-b295/perf/sm-mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:99
msgid "`00:13:50 <tests/2.6.0-b287/perf/xmldb/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:99
msgid "`00:16:53 <tests/2.6.0-b287/perf/mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:99
msgid "`00:48:17 <tests/2.6.0-b287/perf/pgsql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:99
msgid "`00:49:06 <tests/2.6.0-b287/perf/sm-mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:101
msgid "`00:13:29 <tests/2.5.0-b279/perf/xmldb/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:101
msgid "`00:16:58 <tests/2.5.0-b279/perf/mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:101
msgid "`00:47:15 <tests/2.5.0-b279/perf/pgsql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:101
msgid "`00:41:52 <tests/2.5.0-b279/perf/sm-mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:103
msgid "`00:13:20 <tests/2.4.0-b263/perf/xmldb/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:103
msgid "`00:16:21 <tests/2.4.0-b263/perf/mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:103
msgid "`00:43:56 <tests/2.4.0-b263/perf/pgsql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:103
msgid "`00:42:08 <tests/2.4.0-b263/perf/sm-mysql/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:105
msgid "`01:23:30 <tests/performance-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:109
msgid "Stability Tests"
msgstr ""

#: ../../Tigase_Development/Tests.rst:111
msgid ""
"Checking to see whether the function behaves well in long term run. It "
"must handle hundreds of requests a second in a several hour server run."
msgstr ""

#: ../../Tigase_Development/Tests.rst:116
msgid "`16:06:31 <tests/stability-tests.html>`__"
msgstr ""

#: ../../Tigase_Development/Tests.rst:120
msgid "Tigase Test Suite"
msgstr ""

#: ../../Tigase_Development/Tests.rst:122
msgid ""
"Tigase Test Suite is an engine which allows you to run tests. Essentially"
" it just executes **TestCase** implementations. The tests may depend on "
"other tests which means they are executed in specific order. For example "
"authentication test is executed after the stream open test which in turn "
"is executed after network socket connection test."
msgstr ""

#: ../../Tigase_Development/Tests.rst:124
msgid ""
"Each **TestCase** implementation may have itâ€™s own set of specific "
"parameters. There is a set of common parameters which may be applied to "
"any **TestCase**. As an example of the common parameter you can take "
"**-loop = 10** which specified that the **TestCase** must be executed 10 "
"times. The test specific parameter might be **-user-name = tester** which"
" may set the user name for authentication test."
msgstr ""

#: ../../Tigase_Development/Tests.rst:126
msgid ""
"The engine is very generic and allows you to write any kind of tests but "
"for the Tigase projects the current TestCase implementations mimic an "
"XMPP client and are designed to test XMPP servers."
msgstr ""

#: ../../Tigase_Development/Tests.rst:128
msgid ""
"The suite contains a kind of scripting language which allows you to "
"combine test cases into a test scenarios. The test scenario may contain "
"full set of functional tests for example, another test scenario may "
"contain performance tests and so on."
msgstr ""

#: ../../Tigase_Development/Tests.rst:131
msgid "Running Tigase Test Suite (TTS)"
msgstr ""

#: ../../Tigase_Development/Tests.rst:133
msgid "To obtain TTS, you will first need to clone the repository"
msgstr ""

#: ../../Tigase_Development/Tests.rst:139
msgid ""
"Once cloning is finished, navigate to the TTS root directory and compile "
"with maven:"
msgstr ""

#: ../../Tigase_Development/Tests.rst:145
msgid ""
"Maven will compile TTS and place jars in the necessary locations. From "
"the same directory, you can begin running TTS using the following "
"command:"
msgstr ""

#: ../../Tigase_Development/Tests.rst:151
msgid ""
"You should see the following, which outlines the possible options to "
"customize your test run"
msgstr ""

#: ../../Tigase_Development/Tests.rst:193
msgid "Customizing Tigase Test Suite"
msgstr ""

#: ../../Tigase_Development/Tests.rst:195
msgid ""
"You may run the tests from a command line like above, however you may "
"create and edit the /scripts/tests-runner-settings.sh file to fit your "
"Tigase installation and avoid having to have long complex commands as "
"this template shows:"
msgstr ""

#: ../../Tigase_Development/Tests.rst:225
msgid ""
"This will allow you to maintain identical settings through multiple runs "
"of TTS. See the next section for learning how the scripting language "
"works and how you can create and run your own custom tests."
msgstr ""

#: ../../Tigase_Development/Tests.rst:228
msgid "Test Suite Scripting Language"
msgstr ""

#: ../../Tigase_Development/Tests.rst:230
msgid ""
"The test suite contains scripting language which allows you to combine "
"test cases into a test scenarios. On the lowest level, however the "
"language is designed to allow you to describe the test by setting test "
"parameters, test comments, identification and so on."
msgstr ""

#: ../../Tigase_Development/Tests.rst:232
msgid "Letâ€™s look at the example test description."
msgstr ""

#: ../../Tigase_Development/Tests.rst:244
msgid "Meaning of all elements:"
msgstr ""

#: ../../Tigase_Development/Tests.rst:246
msgid ""
"**Short name** is any descriptive name you want. It doesnâ€™t need to be "
"unique, just something which tells you what this test is about. @ is a "
"separator between the short name and the test ids."
msgstr ""

#: ../../Tigase_Development/Tests.rst:248
msgid ""
"**test-id-1;test-id-2** is a semicolon separated of the test cases IDs. "
"The tests cases are executed in the listed order. And listing them there "
"means that the test-id-2 depends on test-id-1. Normally you donâ€™t have to"
" list all the dependencies because all mandatory dependencies are "
"included automatically. Which means if you have an authentication test "
"case the suite adds the network socket connection and stream opening "
"tests automatically. Sometimes however, there are dependencies which are "
"optional or multiple mandatory dependencies and you need to select which "
"one has to be executed. As a good example is the authentications test "
"case. There are many authentication tests: PLAIN-AUTH, SASL-DIGESTMD5, "
"SASL-PLAIN, DIGEST-AUTH and they are all mandatory for most of other "
"tests like roster, presence and so on. One of the authentication tests is"
" a default dependency but if you put on the list different authentication"
" it will be used instead of default one."
msgstr ""

#: ../../Tigase_Development/Tests.rst:250
msgid ""
"**:** is a separator between test cases ids list and the short test "
"description."
msgstr ""

#: ../../Tigase_Development/Tests.rst:252
msgid ""
"**Short test description** is placed between : - colon and opening **{** "
"- curly bracket. This is usually quite brief, single line test "
"description."
msgstr ""

#: ../../Tigase_Development/Tests.rst:254
msgid ""
"**{ }** curly brackets contain all the test parameters, like how many "
"times the test has to be executed or run the test in a separate thread, "
"user name, host IP address for the network connection and many others."
msgstr ""

#: ../../Tigase_Development/Tests.rst:256
msgid ""
"**>> <<** inside the double greater than and double less than you put a "
"very long, multiple line test description."
msgstr ""

#: ../../Tigase_Development/Tests.rst:258
msgid ""
"As for the testing script between open curly brackets { and close one } "
"you can put all the test case parameters you wish. The format for it is:"
msgstr ""

#: ../../Tigase_Development/Tests.rst:260
msgid "**-parameter-name = value**"
msgstr ""

#: ../../Tigase_Development/Tests.rst:262
msgid ""
"Parameter names always start with **-**. Note, some parameters donâ€™t "
"require any value. They can exist on their own without any value "
"assigned:"
msgstr ""

#: ../../Tigase_Development/Tests.rst:264
msgid "**-debug-on-error**"
msgstr ""

#: ../../Tigase_Development/Tests.rst:266
msgid "This imitates if you were to put **yes** or **true** as the value."
msgstr ""

#: ../../Tigase_Development/Tests.rst:268
msgid ""
"The scripting language includes also support for variables which can be "
"assigned any value and used multiple times later on. You assign a value "
"to the variable the same way as you assign it to the parameter:"
msgstr ""

#: ../../Tigase_Development/Tests.rst:270
msgid "**$(variable-name) = value**"
msgstr ""

#: ../../Tigase_Development/Tests.rst:272
msgid ""
"The variable name must be always enclosed with brackets **()** and start "
"with **$**."
msgstr ""

#: ../../Tigase_Development/Tests.rst:274
msgid ""
"The value may be enclosed within double quotes **\"\"** or double quotes "
"may be omitted. If this is a simple string like a number or character "
"string consisting only of digits, letters, underscore **\\_** and hyphen "
"**-** then you can omit double quotes otherwise you must enclose the "
"value."
msgstr ""

#: ../../Tigase_Development/Tests.rst:276
msgid ""
"The test case descriptions can be nested inside other test case "
"descriptions. Nested test case descriptions inherit parameters and "
"variables from outer test case description."
msgstr ""

#: ../../Tigase_Development/Tests.rst:279
msgid "Writing Tests for Plugins"
msgstr ""

#: ../../Tigase_Development/Tests.rst:281
msgid ""
"You can write tests in a simple text file which is loaded during test "
"suite runtime."
msgstr ""

#: ../../Tigase_Development/Tests.rst:283
msgid ""
"You simply specify what should be send to the server and what response "
"should be expected from the server. No need to write Java code and "
"recompile the whole test suite for new tests. It means new test cases can"
" be now written easily and quickly which hopefully means more detailed "
"tests for the server."
msgstr ""

#: ../../Tigase_Development/Tests.rst:285
msgid "How it works:"
msgstr ""

#: ../../Tigase_Development/Tests.rst:287
msgid ""
"Letâ€™s take `XEP-0049 <http://www.xmpp.org/extensions/xep-0049.html>`__ "
"Private XML Storage. Looking into the spec we can see the first example:"
msgstr ""

#: ../../Tigase_Development/Tests.rst:290
msgid "Example: Client Stores Private Data"
msgstr ""

#: ../../Tigase_Development/Tests.rst:292
msgid "**CLIENT:**"
msgstr ""

#: ../../Tigase_Development/Tests.rst:304
msgid "**SERVER:**"
msgstr ""

#: ../../Tigase_Development/Tests.rst:310
msgid ""
"This is enough for the first simple test. I have to create text file "
"``JabberIqPrivate.test`` looking like this:"
msgstr ""

#: ../../Tigase_Development/Tests.rst:329
msgid "And now I can execute the test:"
msgstr ""

#: ../../Tigase_Development/Tests.rst:366
msgid ""
"If I just started working on this XEP and there is no code on the server "
"side, the result is perfectly expected although maybe this is not what we"
" want. After a while of working on the server code I can execute the test"
" once again:"
msgstr ""

#: ../../Tigase_Development/Tests.rst:396
msgid ""
"This is it. The result we want in a simple and efficient way. We can "
"repeat it as many times we want which is especially important in longer "
"term trials. Every time we change the server code we can re-run tests to "
"make sure we get correct responses from the server."
msgstr ""

#: ../../Tigase_Development/Tests.rst:398
msgid ""
"You can have a look in the current build, with more complete test cases, "
"file for `JabberIqPrivate <https://github.com/tigase/tigase-"
"testsuite/tree/master/tests/data/JabberIqPrivate.cot>`__."
msgstr ""

#: ../../Tigase_Development/Tests.rst:400
msgid ""
"Now my server tests are no longer outdated. Of course not all cases are "
"so simple. Some XEPs require calculations to be done before stanza is "
"sent or to compare received results. A good example for this case is user"
" authentication like SASL and even NON-SASL. But still, there are many "
"cases which can be covered by simple tests: roster management, privacy "
"lists management, vCard, private data storage and so on."
msgstr ""

#: ../../Tigase_Development/Tests.rst:403
msgid "Test Case Parameters Description"
msgstr ""

#: ../../Tigase_Development/Tests.rst:405
#: ../../Tigase_Development/Tests.rst:407
msgid ""
"There is long list of parameters which can be applied to any test case. "
"Here is the description of all possible parameters which can be used to "
"build test scenarios."
msgstr ""

#: ../../Tigase_Development/Tests.rst:410
msgid "Test Report Configuration"
msgstr ""

#: ../../Tigase_Development/Tests.rst:412
msgid ""
"There are test report parameters which must be set in the main script "
"file in order to generate HTML report from the test. These parameters "
"have no effect is they are set inside the test case description."
msgstr ""

#: ../../Tigase_Development/Tests.rst:414
msgid ""
"**-version = 2.0.0** sets the test script version. This is used to easily"
" detect incompatibility issues when the test suite loads a script created"
" for more recent version of the suite and may not work properly for this "
"version."
msgstr ""

#: ../../Tigase_Development/Tests.rst:416
msgid ""
"**-output-format = (html \\| html-content)** sets the output format for "
"the test report. There is actually only one format possible right now - "
"HTML. The only difference between these 2 options is that the **html** "
"format creates full HTML page with HTML header and body. The **html-"
"content** format on the other hand creates only what is inside "
"``<body/>`` element. And is used to embed test result inside other HTML "
"content."
msgstr ""

#: ../../Tigase_Development/Tests.rst:418
msgid ""
"**-output-file = \"report-file.html\"** sets the file name for the test "
"report."
msgstr ""

#: ../../Tigase_Development/Tests.rst:420
msgid ""
"**-output-history = (yes \\| no)** sets logging of the all protocol data "
"sent between test suite and the XMPP server. Normally for functional "
"tests it is recommended to set it to **yes** but for all other tests like"
" performance or load tests it should be set to **no**."
msgstr ""

#: ../../Tigase_Development/Tests.rst:422
msgid ""
"**-history-format = separate-file** sets protocol data logging to a "
"separate file. Currently this is the only possible option."
msgstr ""

#: ../../Tigase_Development/Tests.rst:424
msgid "**-output-cols = (5 \\| 7)** Only valid values are:"
msgstr ""

#: ../../Tigase_Development/Tests.rst:431
msgid ""
"**-title** = \"The title of the report page\" This parameter sets the "
"test report title which is placed in the HTML page in the ``<title/>`` "
"element as well as in the first page header."
msgstr ""

#: ../../Tigase_Development/Tests.rst:434
msgid "Basic Test Parameters"
msgstr ""

#: ../../Tigase_Development/Tests.rst:436
msgid ""
"These parameters can be set on per-test case basis but usually they are "
"set in the main script file to apply them to all test cases."
msgstr ""

#: ../../Tigase_Development/Tests.rst:438
msgid ""
"**-base-ns = \"jabber:client\"** sets the XML name space used for the XML"
" stream in the XMPP connection. Some test cases can be used to test "
"client to server protocol as well as server to server protocol and "
"possibly different protocols added in the future."
msgstr ""

#: ../../Tigase_Development/Tests.rst:440
msgid ""
"**-debug** switches debugging mode on. All the communication between the "
"test suite and the server is printed out to the text console and all "
"other debugging information including java exceptions are displayed as "
"well. It is especially useful when some test fails and you want to find "
"out why."
msgstr ""

#: ../../Tigase_Development/Tests.rst:442
msgid ""
"**-debug-on-error** switches on debugging mode on error detection. "
"Normally debug output generates lots of message which makes the output "
"very hard to read. Especially in the performance tests not only you can "
"read fast scrolling lines of the protocol data but also it slows the test"
" down. This option however turns debugging off if everything is working "
"well and then generates debug output if any test error us detected."
msgstr ""

#: ../../Tigase_Development/Tests.rst:444
msgid ""
"**-def-auth = (auth-plain \\| auth-digest \\| auth-sasl)** sets the "
"default authentication method for the user connection."
msgstr ""

#: ../../Tigase_Development/Tests.rst:446
msgid ""
"**-def-stream = (stream-client \\| stream-server \\| stream-component \\|"
" stream-bosh)** sets the connection stream to be tested and the name "
"space for the connection."
msgstr ""

#: ../../Tigase_Development/Tests.rst:448
msgid ""
"**-host = \"host.name\"** the vhost name the tested server runs for. It "
"may be the real DNS name or just configured for testing purposes "
"hostname. It must match however the server configuration."
msgstr ""

#: ../../Tigase_Development/Tests.rst:450
msgid ""
"**-keys-file = \"certs/keystore\"** sets the location of the keys store "
"file. No need to touch it."
msgstr ""

#: ../../Tigase_Development/Tests.rst:452
msgid ""
"**-keys-file-password = keystore** sets the password for the keystore "
"file. Normally you donâ€™t have to touch it."
msgstr ""

#: ../../Tigase_Development/Tests.rst:454
msgid ""
"**-serverip = \"127.0.0.1\"** defines the XMPP server IP address. You may"
" omit this parameter and then the IP address will be determined "
"automatically based on the server DNS address. However if the DNS address"
" can not be correctly resolved or if you run tests on the localhost you "
"can use this parameter to enforce the IP address."
msgstr ""

#: ../../Tigase_Development/Tests.rst:456
msgid ""
"**-socket-wait = 10000** sets the network socket timeout in milliseconds "
"that is maximum time the test suite will wait for the response from the "
"server. You may want to increase the timeout for some specific tests "
"which require lots of computation or database activity on the server. "
"Normally 10 seconds is enough for most cases."
msgstr ""

#: ../../Tigase_Development/Tests.rst:458
msgid ""
"**-stop-on-fail = true** causes the script to terminate all actions on "
"the first failed test case. It helps diagnosing the server state at the "
"failure point."
msgstr ""

#: ../../Tigase_Development/Tests.rst:460
msgid ""
"**-trust-file = \"certs/client_truststore\"** sets the file name for the "
"client trust store file. No need to change it."
msgstr ""

#: ../../Tigase_Development/Tests.rst:462
msgid ""
"**-trust-file-password = truststore** sets the password for the trust "
"store file. Normally you donâ€™t have to touch it."
msgstr ""

#: ../../Tigase_Development/Tests.rst:464
msgid ""
"**-user-name = tester** sets the user name used for the XMPP connections "
"between the test suite and the XMPP server. It is usually set globally "
"the same for all tests and for some tests like receiving the server "
"configuration you may want to use a different account (with admin "
"permissions). Then you can set a different user for this specific test "
"case."
msgstr ""

#: ../../Tigase_Development/Tests.rst:466
msgid ""
"**-user-pass = tester-password** sets the password for the user used for "
"the XMPP connection between the test suite and the XMPP server."
msgstr ""

#: ../../Tigase_Development/Tests.rst:468
msgid ""
"**-user-resr = resource** sets the user JID resource part for the XMPP "
"connection between the test suite and the XMPP server."
msgstr ""

#: ../../Tigase_Development/Tests.rst:471
msgid "Test Case Parameters"
msgstr ""

#: ../../Tigase_Development/Tests.rst:473
msgid ""
"Test parameters which are normally set on per-test case basis and apply "
"only to the test they are set for and all inherited tests. Some of the "
"parameters though are applied only to inherited test cases. Please look "
"in the description below to find more details."
msgstr ""

#: ../../Tigase_Development/Tests.rst:475
msgid ""
"**-active-connection** is a similar parameter to **-on-one-socket** "
"option. If set the suite doesnâ€™t close the network socket and if the test"
" is run in loop each loop run re-uses the network connection. Unlike in "
"the -on-one-socket mode the whole test is executed on each run including "
"XMPP stream initialization and user authentication. This option is "
"currently not recommended in a normal use. It is useful only to debug the"
" server behavior in very special use cases."
msgstr ""

#: ../../Tigase_Development/Tests.rst:477
msgid ""
"**-background** executes the test in a separate thread in background and "
"immediately returns control to the test suite program without waiting for"
" the test to complete. Default behavior is to execute all tests "
"sequentially and run next test when previous one has been completed. This"
" parameter however allows to run tests concurrently. This a bit similar "
"option to the **-daemon** parameter. The daemon test/task however is "
"ignored completely and results from the daemon are not collected where "
"the background test is a normal test which is run concurrently with "
"another one or possibly many other tests."
msgstr ""

#: ../../Tigase_Development/Tests.rst:479
msgid ""
"**-daemon** creates a task running in background in a separate thread. "
"Such a test runs infinitely as a daemon, it is not recorded in the test "
"report and itâ€™s result is not calculated. The purpose of such test/task "
"is to work as a helper for other test cases. A good example of such "
"daemon test is message responder - the test which runs under a different "
"user name and waits for messages and responding to the sender."
msgstr ""

#: ../../Tigase_Development/Tests.rst:481
msgid ""
"**-delay = 1000** sets the waiting time in milliseconds after the test "
"case is completed. You may use it if you want to introduce short delay "
"between each test cases run in the loop or if you start the helper daemon"
" thread and you have to add the delay to make sure it is ready to work "
"before next real test starts sending requests to the daemon."
msgstr ""

#: ../../Tigase_Development/Tests.rst:483
msgid ""
"**-expect-type = error** sets the type for a packet expected as a "
"response. Some test cases like message sender expects sometimes response "
"with the same type it has sent the packet ( **chat** ) but in some other "
"cases when it sends a message to a user who has privacy lists set to "
"block messages the response should be with an error. This way we can use "
"the same test cases for testing different responses scenarios."
msgstr ""

#: ../../Tigase_Development/Tests.rst:485
msgid ""
"**-loop = 10** sets the number of times the test (and all inherited "
"tests) are repeated. You can use a **$(loop)** pseudo-variable to obtain "
"and use the current loop run number. This is useful if you want to run "
"every loop run for a different user name like registering 10 different "
"user accounts. To do this you stick the $(loop) variable to the user name"
" string: **-user-name = \"nick_name_$(loop)\"**."
msgstr ""

#: ../../Tigase_Development/Tests.rst:487
msgid ""
"**-loop-delay = 10** sets a delay in milliseconds between each individual"
" loop run for the tests which is run multiple times. This is similar "
"parameter to the **-delay** one but the **-delay** option introduces a "
"delay after the whole test (or all loop runs) has been completed. The "
"loop delay options adds waiting time between each run of the looped test."
msgstr ""

#: ../../Tigase_Development/Tests.rst:489
msgid ""
"**-loop-start = 5** sets the loop starting value. It doesnâ€™t affect "
"number of loop runs in a any way. It only affects the value of the "
"**$(loop)** variable. Letâ€™s say you want to run a load test for the "
"server with 100k concurrent users and you want to run the test from 3 "
"different machines. To make sure each machine uses distinct user accounts"
" you have to set a different **-loop-start** parameter on each to prevent"
" from overlapping."
msgstr ""

#: ../../Tigase_Development/Tests.rst:491
msgid ""
"**-messages = 10** sets the number of messages to send to the server. "
"This is another way of looping the test. Instead of repeating the whole "
"test with opening network connection, XMPP stream, authentication and so "
"on it causes only to send the message this many times. This parameters is"
" accepted by some test cases only which send messages. For the messages "
"listeners - test cases which is supposed to respond to the messages the "
"number set here specifies how many times the the response must be sent "
"before the test successfully terminates itâ€™s work."
msgstr ""

#: ../../Tigase_Development/Tests.rst:493
msgid ""
"**-multi-thread** option causes to run the test case and all inherited in"
" all levels test cases in separate threads. Normally the test case where "
"you put the parameter doesnâ€™t have a test ID (what you put between '@' "
"and ':' characters so it doesnâ€™t run a test on itâ€™s own. Instead it "
"contains a series of test cases inside which are then run in a separate "
"thread each. This is a key parameter to run tests for many concurrent "
"users. (Not a load tests though.) For example you can see whether the "
"server behaves correctly when 5 simultaneous modifies their roster. The "
"execution time all inherited tests run in a separate threads is added "
"together and also results from each individual test is calculated and "
"added to the total main test results."
msgstr ""

#: ../../Tigase_Development/Tests.rst:495
msgid ""
"**-no-record** is used for kind of configuration tests (tasks) which are "
"used to prepare the XMPP server or database for later tests. As an "
"example can be creation of the test user account which is later on used "
"for the roster tests. Usually you donâ€™t want to include such tests in the"
" test report and using this parameter you essentially exclude the test "
"from the report. The test and the result however shows in the command "
"line output so you can still track what is really going on."
msgstr ""

#: ../../Tigase_Development/Tests.rst:497
msgid ""
"**-on-one-socket** is a modifier for a looped test case. Normally when we"
" switch looping on using **-loop** parameter the suite resets the state, "
"closes the network socket and runs the test from the very beginning "
"including opening network socket, XMPP stream, authentication and so on. "
"This parameter however changes this behavior. The network socket is not "
"closed when the test run is completed (successfully) and next run "
"executes only the last part of the test omitting the XMPP stream "
"initialization, authentication and all others but last. This is useful "
"when you want to send many messages to the server (although this effect "
"may be accomplished using **-messages** parameter as well) or registering"
" many user accounts on the server, unregistering user accounts and any "
"other which might make sense repeating many times."
msgstr ""

#: ../../Tigase_Development/Tests.rst:499
msgid ""
"**-port = 5223** this parameter is similar to the IP address setting and "
"can be also set globally for all tests. Normally however you set it for a"
" selected tests only to check SSL connection. For all other tests default"
" port number is used. Therefore this parameters has been included in this"
" section instead of \"Basic test parameters\"."
msgstr ""

#: ../../Tigase_Development/Tests.rst:501
msgid ""
"**-presence** this parameter enables sending initial presence with "
"positive priority after connection and binding the session."
msgstr ""

#: ../../Tigase_Development/Tests.rst:503
msgid ""
"**-repeat-script = 100** and **-repeat-wait = 10** are 2 parameters are "
"specific to the common test cases. (The test cases which reads the test "
"input/output data from the pseudo-xml text file. The first parameter is "
"another variation of test looping. It sets how many times the test has to"
" be repeated. It works very much like the **-on-one-socket** parameter. "
"The only difference is that the common test can preserve some internal "
"states between runs and therefore it has more control over the data. The "
"second parameter sets the timeout in milliseconds to wait/delay between "
"each individual test run and it is a very similar parameter to the "
"**-delay** one but it sets a timeout inside the common test instead."
msgstr ""

#: ../../Tigase_Development/Tests.rst:505
msgid ""
"**-source-file = \"dir/path/to/file.cot\"** is a parameter to set the "
"\"common test\" script file. The common test is a test cases which "
"depends on the authentication test case and can read data to send and "
"responses to expect from the text file. The \"cot\" file is a pseudo-xml "
"file with stanzas to send and stanzas to expect. The the test cases "
"compares the received packets with those in the text file and reports the"
" test result. This is usually a more convenient way to write a new test "
"cases than coding them in Java."
msgstr ""

#: ../../Tigase_Development/Tests.rst:507
msgid ""
"**-time-out-ok** is set for a test case when we expect socket timeout as "
"a correct result from the test case. Normally the timeout means that the "
"test failed and there was no response from the server at all or the "
"response was incorrect. For some tests however (like sending a message to"
" the user who is blocking messages through privacy lists) the timeout is "
"the desired correct test result."
msgstr ""

#: ../../Tigase_Development/Tests.rst:509
msgid ""
"**-to-jid = \"**\\ user_name@host.name\\ **\"** sets the destination "
"address for packets sending packets somewhere. As an example is the test "
"case sending ``<message/>`` packet. You can set the destination address "
"for the packet. Mind, normally every test expects some response for the "
"data sent so make sure the destination end-point will send back the data "
"expected by the test case."
msgstr ""

