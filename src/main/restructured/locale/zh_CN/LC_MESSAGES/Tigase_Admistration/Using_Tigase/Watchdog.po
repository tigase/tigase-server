# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2022, Tigase, Inc
# This file is distributed under the same license as the TigaseDoc package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: TigaseDoc \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-05-13 12:04-0700\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:2
msgid "Watchdog"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:4
msgid ""
"Tigase’s Watchdog was implemented to help Tigase close connections that "
"have become stale or inactive. Sometimes the connection is delayed, maybe"
" dropped packets, or a service interruption. After a time, if that "
"connection is re-established, both server and client (or server and "
"server) will continue on as if nothing happened. However, these gaps in "
"connection can last longer, and some installations will rely on the "
"operating system to detect and close stale connections. Some operating "
"systems or environments can take up to 2 hours or more to determine "
"whether a connection is bad and wait for a response from a foreign entity"
" and may not be configured. This can not only slow down performance, but "
"can lead to security issues as well. To solve this problem, we have "
"introduced Watchdog to monitor connections independent of operating "
"system and environments to keep those broken connections from becoming a "
"problem."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:7
msgid "Setup"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:9
msgid ""
"No extra setup is necessary, Watchdog is already included with your build"
" of Tigase (as long as it’s 7.1.0 or newer). Follow the steps in the "
"configuration section."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:12
msgid "Watchdog Configuration"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:14
msgid ""
"To configure watchdog, the following lines need to be present or edited "
"in ``config.tdsl`` file:"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:22
msgid "The three settings are as follows:"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:24
msgid ""
"``'watchdog-timeout'= 70000`` This setting sets the amount of time that "
"watchdog will consider before it determines a connection may be stale. "
"This setting sets the timeout at 70000ms or 70 seconds."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:26
msgid ""
"``'watchdog-delay' = 60000`` This setting sets how often the watchdog "
"should conduct the check, the default delay at 60000ms or 60 seconds."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:28
msgid ""
"``'watchdog-ping-type'`` This setting determines the type of ping sent to"
" components when watchdog is testing for activity."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:30
msgid ""
"You may, if you choose, to specify individual watchdog settings for "
"specific components by adding them to the component settings, for example"
" if we wanted to change the Client2Server settings to include watchdog, "
"use the following lines in config.tdsl:"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:39
msgid ""
"If any settings are not set, the global or settings will be used. "
"``watchdog-delay`` default is set to 10 min ``watchdog-ping-type`` "
"default is set to XMPP"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:42
msgid "Logic"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:44
msgid ""
"Watchdog compares it’s own pings, and records the time it takes for a "
"round trip to different components, clustered connections, and if one "
"variable is larger than the other, watchdog will commence closing that "
"stale connection. Here is a breakdown:"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:46
msgid ""
"A check is performed of a connection(s) on every ``watchdog-delay`` "
"interval."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:48
msgid "During this check two things occur"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:50
msgid ""
"If the last transfer time exceeds ``max-inactivity-time`` a stop service "
"command is given to terminate and broadcast unavailable presence."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:52
msgid ""
"If the last transfer time is lower than ``max-inactivity-time`` but "
"exceeds ``watchdog-timeout`` watchdog will try to send a ping (of "
"``watchdog-ping-type``). This ping may be one of two varieties (set in "
"config.tdsl)"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:54
msgid ""
"``WHITESPACE`` ping which will yield the time of the last data transfer "
"in any direction."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:56
msgid "``XMPP`` ping which will yield the time of the last received xmpp stanza."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:58
msgid ""
"If the 2nd option is true, the connection will remain open, and another "
"check will begin after the ``watchdog-delay`` time has expired."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:60
msgid "For example, lets draw this out and get a visual representation"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:70
msgid ""
"This line represents how often the check is performed. Each ``-`` (dash) "
"is 10 seconds, so the check is done every 60 seconds (``'watchdog-delay' "
"= 60000``)"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:72
msgid ""
"This line is client activity, here the client sent a message at 40 "
"seconds (marked by ``+``) and has gone idle."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:74
msgid ""
"The following line represents the watchdog logic, with timeout at 120 "
"seconds and max inactivity timeout at 180 seconds:"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:84
msgid "How the check is performed:"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:86
msgid ""
"30 seconds - at this point *last transfer* or *last received* time is "
"updated."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:88
msgid ""
"60 seconds - watchdog runs - it check the connection and says: \\_ok, "
"last client transfer was 20s ago - but it’s lower than both inactivity "
"(so don’t disconnect) and timeout (so don’t send ping)."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:90
msgid ""
"120 seconds - 2nd check - last transfer was 100s ago - still lower than "
"both values - do nothing."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:92
msgid ""
"180 seconds - 3rd check - last transfer was 160s ago - lower than "
"inactivity but greater than delay - ping it sent."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:94
msgid ""
"240 seconds - 4th check - last transfer was 220s ago - client still "
"hasn’t responded, watchdog compares idle time to ``max-inactivity-"
"timeout`` and finds out that it is greater, connection is terminated."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:96
msgid ""
"300 seconds - watchdog is run again but given the connection was "
"terminatet there is no XMPP session to check for that particular client."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:100
msgid ""
"It is possible that the connection is broken, and could be detected "
"during the sending of a ping and the connection would be severed at step "
"4 instead of waiting for step 5. **NOTE** This MAY cause JVM to throw an "
"exception."
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:104
msgid ""
"Global settings may not be ideal for every setup. Since each component "
"has its own settings for ``max-inactivity-time`` you may find it "
"necessary to design custom watchdog settings, or edit the inactivity "
"times to better suit your needs. Below is a short list of components with"
" thier default settings:"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:126
msgid ""
"Again remember, for Watchdog to properly work, the ``max-inactivity-"
"time`` MUST be longer than the ``watchdog-timeout`` setting"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:129
msgid "Testing"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:131
msgid ""
"The tigase.log.0 file can reveal some information about watchdog and how "
"it is working (or how it might be fighting your settings). To do so, "
"enter the following line into your ``config.tdsl`` file:"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:137
msgid ""
"This will set debug mode for your log, and enable some more information "
"about what Tigase is doing. These logs are truncated for simplicity. Lets"
" look at the above scenario in terms of the logs:"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:139
msgid "**Stage Two.**"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:145
msgid "**Stage Three.**"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:151
msgid "**Stage Four.**"
msgstr ""

#: ../../Tigase_Admistration/Using_Tigase/Watchdog.rst:158
msgid "**Stage Five.**"
msgstr ""

